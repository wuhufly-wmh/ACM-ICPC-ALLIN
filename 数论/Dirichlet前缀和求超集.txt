#include <bits/stdc++.h>

#define debug(x) cout << #x << ": " << x << "\n"
using namespace std;
const int N = 2e4 + 5, inf = 0x3f3f3f3f;
int prime[N], cnt = 0, vis[N];
void init() {
  for (int i = 2; i <= N - 5; i += 1) {
    if (!vis[i]) {
      prime[++cnt] = i;
    }
    for (int j = 1; j <= cnt && i * prime[j] <= N - 5; j += 1) {
      vis[i * prime[j]] = 1;
      if (i % prime[j] == 0) {
        break;
      }
    }
  }
  return;
}
using ll = long long;
ll sum[N] = {0};
ll C(int n) { return 1ll * n * (n - 1) * (n - 2) * (n - 3) / 24; }
void Solve(int n) {
  int x;
  memset(sum, 0, sizeof(sum));
  for (int i = 1; i <= n; i += 1) {
    cin >> x;
    sum[x] += 1;
  }
  for (int i = 1; prime[i] <= 10000; i += 1) {
    for (int j = 10000 / prime[i]; j >= 1; j -= 1) {
      sum[j] += sum[j * prime[i]];
    }
  }
  for (int i = 1; i <= 10000; i += 1) {
    sum[i] = C(sum[i]);
  }
  for (int i = 1; prime[i] <= 10000; i += 1) {
    for (int j = 1; j <= 10000 / prime[i]; j += 1) {
      sum[j] -= sum[j * prime[i]];
    }
  }
  cout << sum[1] << "\n";
  return;
}
signed main() {
  cin.tie(0)->sync_with_stdio(false);
  cout.tie(0);
  init();
  int T = 1;
  while (cin >> T) {
    Solve(T);
  }
  return 0;
}